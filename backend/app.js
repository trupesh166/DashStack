const express = require('express')
const cors = require("cors")
const dotenv = require('dotenv')
const connection = require('./Config/db')
const societyRouter = require('./routes/SocietyRouter')
const societyHandlerRouter = require('./routes/SocietyHandlerRouter')
const wingRouter = require('./routes/WingRouter')
const unitRouter = require('./routes/UnitRouter')
const memberRouter = require('./routes/MemberRouter')
const importantRouter = require('./routes/ImportantRouter')
const maintenanceRouter = require('./routes/MaintenanceRouter')
const eventRouter = require('./routes/EventRouter')
const securityRouter = require('./routes/SecurityRouter')
const securityProtocolRouter = require('./routes/SecurityProtocolRouter')
const eventDetailsRouter = require('./routes/EventDetalisRouter')
const maintenanceDetailsRouter = require('./routes/MaintenanceDetailsRouter')
const complaintRouter = require('./routes/ComplaintRouter')
const expanseRouter = require('./routes/ExpanseRouter')
const expanseNoteRouter = require('./routes/ExpanseNoteRouter')
const announcementRouter = require('./routes/AnnouncementRouter')
const visitorRouter = require('./routes/VisitorRouter')

dotenv.config()
const app = express()
app.use(cors())
app.use(express.json())

connection()

app.use("/society", societyRouter)
app.use("/society-handler", societyHandlerRouter)
app.use("/wing", wingRouter)
app.use("/unit", unitRouter)
app.use("/member", memberRouter)
app.use('/workernumber', importantRouter)
app.use('/maintain', maintenanceRouter)
app.use('/maintain-detail', maintenanceDetailsRouter)
app.use('/event', eventRouter)
app.use('/event-details', eventDetailsRouter)
app.use('/security', securityRouter)
app.use('/securityprotocol', securityProtocolRouter)
app.use('/user', unitRouter)
app.use('/complain', complaintRouter)
app.use('/expanse', expanseRouter)
app.use('/expanseNote', expanseNoteRouter)
app.use('/announcement', announcementRouter)
app.use('/visitor', visitorRouter)


app.get("/", (req, res) => {
  return res.status(200).send({ message: "Success" })
})

app.listen(process.env.PORT, () => {
  console.log("Server Started")
})
